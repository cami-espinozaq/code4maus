@import '../../css/colors.css';
@import '../../css/units.css';

/* In prep for renaming sprite-selector-item to sprite */
.sprite {
  /*
        Our goal is to fit sprites evenly in a row without leftover space.
        Flexbox's `space between` property gets us close, but doesn't flow
        well when the # of items per row > 1 and less than the max per row.

        Solving by explicitly calc'ing the width of each sprite. Setting
        `border-box` simplifies things, because content, padding and
        border-width all are included in the width, leaving us only to subtract
        the left + right margins.

        @todo: make room for the scrollbar
    */
  box-sizing: border-box;
  flex: 0 0 4rem;
  max-width: 4rem;
  min-height: 4rem; /* @todo: calc height same as width */
  margin: calc($space / 2);
}

.items-wrapper {
  display: flex;
  flex-direction: row;
  flex-grow: 1;
  align-items: center;
  position: relative;
  font-family: 'Titillium Web';
  background-color: #f0f5fa;

  overflow-x: auto;

  padding: $space;
}

/* overflow: scroll will ignore padding on the right */
.items-wrapper:after {
  content: ' ';
  flex: 0 0 0.25rem;
  display: block;
}

.label {
  margin: 0 0.5rem;
  align-self: center;
}

.add-box {
  align-items: center;
  justify-content: center;
  outline: none;
  background: transparent;
}

.add-box span {
  height: 2.5rem;
}

.raised:hover {
  background-color: $ui-blue;
  transform: scale(1.05);
}

.raised:hover,
.raised.drag-target {
  animation-name: wiggle;
  animation-duration: 500ms;
  animation-iteration-count: 1;
  animation-timing-function: ease-in-out;
  background-color: $ui-blue;
}

@keyframes wiggle {
  0% {
    transform: rotate(3deg) scale(1.05);
  }
  25% {
    transform: rotate(-3deg) scale(1.05);
  }
  50% {
    transform: rotate(5deg) scale(1.05);
  }
  75% {
    transform: rotate(-2deg) scale(1.05);
  }
  100% {
    transform: rotate(0deg) scale(1.05);
  }
}

.receivedBlocks {
  animation: glowing 250ms;
}

@keyframes glowing {
  10% {
    box-shadow: 0 0 10px $ui-blue;
  }
  90% {
    box-shadow: 0 0 10px $ui-blue;
  }
  100% {
    box-shadow: none;
  }
}
